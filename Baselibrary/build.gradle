apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    api 'androidx.appcompat:appcompat:1.0.0'
    api 'com.google.android.material:material:1.0.0'
    // cardview
    api 'androidx.cardview:cardview:1.0.0'
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Anko Commons
    api "org.jetbrains.anko:anko-commons:$anko_version"

    // Support-v4 (only Anko Commons)
    api("org.jetbrains.anko:anko-support-v4-commons:$anko_version") {
        exclude group: 'com.android.support'
    }

    // rx
    api "io.reactivex:rxkotlin:$rx_kotlin_version"
    api "io.reactivex:rxandroid:$rx_android_version"

    // retrofi
    api "com.squareup.okhttp3:okhttp:$ok_http_version"
    api "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"

    // dagger2
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Rxlifecycle
    api "com.trello:rxlifecycle-components:$rx_lifecycle_version"
    api "com.trello:rxlifecycle-kotlin:$rx_lifecycle_version"
    api 'androidx.recyclerview:recyclerview:1.0.0'

    // glide
    api "com.github.bumptech.glide:glide:$glide_version"

    // 圆形图片
    api "de.hdodenhof:circleimageview:$circle_imageView_version"

    // take photo
    api "com.jph.takephoto:takephoto_library:$take_photo_version"

    // alert view
    api "com.bigkoo:alertview:$alert_view_view"

    // timber log
    api "com.jakewharton.timber:timber:$timber_version"

    // logger
    api "com.orhanobut:logger:$logger_version"

    // qiniu
    api "com.qiniu:qiniu-android-sdk:$qiniu_version"

    // navigation
    api "com.ashokvarma.android:bottom-navigation-bar:$bottom_navigation_bar_version"

    // banner
    api "com.youth.banner:banner:$banner_version"

    // 折扣
    api "com.github.shts:TriangleLabelView:$triangleLabelView_version"

    // 画廊
    api "com.github.crosswall:Android-Coverflow:$android_coverflow_version"

    // 加载框
    api "com.github.Kennyc1012:MultiStateView:$multiStateView_version"

    // 上拉加载和下拉刷新
    api "cn.bingoogolapple:bga-refreshlayout:$bga_refreshlayout_version"

    // 发送消息
    api "com.eightbitlab:rxbus:$rxbus_version"

    // 单选，多选，多行展开缩回，tag高度自定义
    api "com.github.hymanme.tagflowlayout:tagflowlayout:$tagflowlayout_version"

    //FlowLayout
    api "com.hyman:flowlayout-lib:$flowlayout_version"

    // arouter
    api "com.alibaba:arouter-api:$arouter_api_version"

    // badgeview
    api "q.rorbin:badgeview:$badgeview_version"

    // MultiDex.install(this)
    //api "androidx.multidex:multidex:$multidex_version"



}
repositories {
    google()
    jcenter()
}

// 方案二
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}
